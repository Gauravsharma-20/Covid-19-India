[{"D:\\GROWW\\covid-app\\src\\index.js":"1","D:\\GROWW\\covid-app\\src\\components\\App.js":"2","D:\\GROWW\\covid-app\\src\\components\\Cards\\Cards.js":"3","D:\\GROWW\\covid-app\\src\\components\\NavBar\\NavBar.js":"4","D:\\GROWW\\covid-app\\src\\components\\Table\\Table.js":"5","D:\\GROWW\\covid-app\\src\\components\\SearchBar\\SearchBar.js":"6","D:\\GROWW\\covid-app\\src\\components\\CurrentTime\\CurrentTime.js":"7","D:\\GROWW\\covid-app\\src\\components\\Cards\\Vacinated.js":"8","D:\\GROWW\\covid-app\\src\\components\\Cards\\CardItem.js":"9","D:\\GROWW\\covid-app\\src\\components\\Table\\TableData.js":"10","D:\\GROWW\\covid-app\\src\\components\\Table\\TableHeader.js":"11","D:\\GROWW\\covid-app\\src\\components\\utils\\Loader.js":"12","D:\\GROWW\\covid-app\\src\\components\\Table\\TableHeaderButton.js":"13","D:\\GROWW\\covid-app\\src\\components\\Table\\TableDataButton.js":"14","D:\\GROWW\\covid-app\\src\\components\\NavBar\\Mode.js":"15","D:\\GROWW\\covid-app\\src\\components\\NavBar\\Notification.js":"16","D:\\GROWW\\covid-app\\src\\components\\Routes\\Home.js":"17","D:\\GROWW\\covid-app\\src\\components\\Routes\\StateDetail.js":"18","D:\\GROWW\\covid-app\\src\\components\\utils\\NotFound.js":"19"},{"size":162,"mtime":1612108140593,"results":"20","hashOfConfig":"21"},{"size":2690,"mtime":1612962665274,"results":"22","hashOfConfig":"21"},{"size":1634,"mtime":1612516456495,"results":"23","hashOfConfig":"21"},{"size":764,"mtime":1612964394965,"results":"24","hashOfConfig":"21"},{"size":678,"mtime":1612516580443,"results":"25","hashOfConfig":"21"},{"size":2613,"mtime":1612956421478,"results":"26","hashOfConfig":"21"},{"size":471,"mtime":1612170361729,"results":"27","hashOfConfig":"21"},{"size":290,"mtime":1612355284254,"results":"28","hashOfConfig":"21"},{"size":606,"mtime":1612499800723,"results":"29","hashOfConfig":"21"},{"size":4622,"mtime":1612958995743,"results":"30","hashOfConfig":"21"},{"size":824,"mtime":1612488455693,"results":"31","hashOfConfig":"21"},{"size":256,"mtime":1612509691365,"results":"32","hashOfConfig":"21"},{"size":255,"mtime":1612434179512,"results":"33","hashOfConfig":"21"},{"size":2019,"mtime":1612955787168,"results":"34","hashOfConfig":"21"},{"size":1646,"mtime":1612859422427,"results":"35","hashOfConfig":"21"},{"size":3073,"mtime":1612980805740,"results":"36","hashOfConfig":"21"},{"size":565,"mtime":1612856516368,"results":"37","hashOfConfig":"21"},{"size":826,"mtime":1612957855990,"results":"38","hashOfConfig":"21"},{"size":355,"mtime":1612962850249,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"10gzvas",{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"D:\\GROWW\\covid-app\\src\\index.js",[],["83","84"],"D:\\GROWW\\covid-app\\src\\components\\App.js",["85","86"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\n\r\nimport NavBar from './NavBar/NavBar';\r\nimport SearchBar from './SearchBar/SearchBar';\r\nimport CurrentTime from './CurrentTime/CurrentTime';\r\nimport Home from './Routes/Home';\r\nimport StateDetail from './Routes/StateDetail';\r\nimport NotFound from './utils/NotFound';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: [],\r\n      isDataAvailable: false,\r\n      notificationData: [],\r\n      isNotificationDataAvailable: false\r\n    };\r\n\r\n  }\r\n\r\n    onFormSubmit = () => {\r\n    //TODO: move to different state- when searched\r\n    \r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n    /*setInterval( async () => {\r\n    }, 600000);*/\r\n    try {\r\n      const response = await axios.get('https://api.covid19india.org/v4/min/data.min.json');\r\n      this.setState({\r\n        data: response.data,\r\n      isDataAvailable: true\r\n    });\r\n    \r\n    //localStorage.setItem('stateData', JSON.stringify(this.state.data));\r\n  } catch (err) {\r\n      console.error(err);\r\n  }\r\n\r\n  try {\r\n    const response = await axios.get('https://api.covid19india.org/updatelog/log.json');\r\n    this.setState({\r\n      notificationData: response.data,\r\n      isNotificationDataAvailable: true\r\n  });\r\n  localStorage.setItem('notificationData', JSON.stringify(this.state.notificationData));\r\n\r\n} catch (err) {\r\n    console.error(err);\r\n}\r\n\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"ui container\">\r\n        <BrowserRouter>\r\n          <NavBar \r\n          isNotificationDataAvailable={this.state.isNotificationDataAvailable}\r\n          data = {this.state.notificationData}  \r\n          />\r\n          <Switch>\r\n            <Route \r\n            path=\"/\" exact \r\n            component={ () => (\r\n                  <Home \r\n                  isDataAvailable={this.state.isDataAvailable} \r\n                  data={this.state.data} \r\n                  />\r\n                )\r\n              } \r\n            />\r\n            <Route \r\n            path=\"/state/:stateCode\" \r\n            component={StateDetail}\r\n            />\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n//<CurrentTime />\r\n//<SearchBar onFormSubmit={this.onFormSubmit} />\r\nexport default App;\r\n\r\n//          <Route path=\"/state/:key\" component={StateDetail} />\r\n//        <Route path=\"/\" component={Home} isDataAvailable={this.state.isDataAvailable} data={this.state.data}/>\r\n\r\n/*\r\n() => (\r\n                  <StateDetail data={this.state.data}/>\r\n                )\r\n              } \r\n*/\r\n","D:\\GROWW\\covid-app\\src\\components\\Cards\\Cards.js",[],"D:\\GROWW\\covid-app\\src\\components\\NavBar\\NavBar.js",[],"D:\\GROWW\\covid-app\\src\\components\\Table\\Table.js",[],"D:\\GROWW\\covid-app\\src\\components\\SearchBar\\SearchBar.js",["87"],"import React, { useEffect, useState , useRef} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport StateCodes from '../utils/StateCodes.json';\r\n\r\nimport './SearchBar.css';\r\n\r\n\r\n\r\nconst SearchBar = () => {\r\n\r\n  const [term, setTerm] = useState('');\r\n  const [debouncedTerm, setDebouncedTerm] = useState(term);\r\n  const [results, setResults] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const ref = useRef();\r\n\r\n  //To close on outside the Region of interest clicks\r\n  useEffect(() => {\r\n    const onBodyClick = (event) => {\r\n      if (ref.current && ref.current.contains(event.target)) {\r\n        return;\r\n      }\r\n      \r\n      setOpen(false);\r\n    };\r\n\r\n    document.body.addEventListener('click', onBodyClick);\r\n\r\n    return () => {\r\n      document.body.removeEventListener('click', onBodyClick);\r\n    };\r\n  }, []);\r\n\r\n  //Set Debounced term\r\n  useEffect(() => {\r\n\r\n    const timerId = setTimeout(() => {\r\n      setDebouncedTerm(term);\r\n    },50);\r\n\r\n    return () => {\r\n      clearTimeout(timerId);\r\n    };\r\n  }, [term]);\r\n\r\n  //Use Debounced term\r\n  useEffect(() => {\r\n\r\n    const searchResults = Object.entries(StateCodes).filter(\r\n      ([key,value]) => {\r\n\r\n          if(key!=='TT'&&key!=='UT'&&value.toLowerCase().startsWith(debouncedTerm.toLowerCase())) {\r\n            return [key,value];\r\n          }\r\n      });\r\n      \r\n    setResults(searchResults);\r\n  }, [debouncedTerm]);\r\n\r\n\r\n  const suggestions = results.map( ([key,value]) => {\r\n    return (\r\n      <div key={key} className=\"suggestion-box\">\r\n      <Link to={`/state/${key}`}>\r\n      <div>\r\n        <span className=\"suggestion-value\">{value}</span>\r\n        <span className=\"suggestion-key\">\r\n          <i className=\"fa fa-arrow-circle-right\" aria-hidden=\"true\"></i>\r\n          {key}\r\n        </span>\r\n      </div>\r\n      </Link>\r\n      </div>\r\n    );\r\n  });\r\n\r\n\r\n  return (\r\n      <div className=\"search-bar\" onClick={() => setOpen(!open)} ref={ref}>\r\n          <div className=\"input-icons\">\r\n            <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n            <input \r\n              className=\"search-input\"\r\n              type=\"text\"\r\n              placeholder=\"Search State\"\r\n              value={term}\r\n              onChange={event => setTerm(event.target.value) }\r\n            />\r\n          </div>\r\n\r\n          <div className={`suggestions-container ${open ?'show':'hide'}`} >\r\n            {suggestions}\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default SearchBar;\r\n\r\n\r\n/*\r\nconst onSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onFormSubmit(this.state.term);\r\n  }\r\n*/\r\n","D:\\GROWW\\covid-app\\src\\components\\CurrentTime\\CurrentTime.js",[],"D:\\GROWW\\covid-app\\src\\components\\Cards\\Vacinated.js",[],"D:\\GROWW\\covid-app\\src\\components\\Cards\\CardItem.js",[],"D:\\GROWW\\covid-app\\src\\components\\Table\\TableData.js",["88"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport TableDataButton from './TableDataButton';\r\n\r\nimport './Table.css';\r\n\r\nclass TableData extends React.Component {\r\n  render() {\r\n    console.log(this.props.data);\r\n    const TableContent = Object.entries(this.props.data).map(\r\n      ([key,value]) => {\r\n        \r\n        const stateCode = key;\r\n        if(stateCode==='TT'||stateCode==='UT') {\r\n          return null;\r\n        }\r\n\r\n        const {\r\n          confirmed, \r\n          recovered, \r\n          deceased, \r\n          tested, \r\n          vaccinated\r\n        } = value.total;\r\n        \r\n        //active data is not provided by API\r\n        const active = confirmed-recovered-deceased;\r\n\r\n        const population = value.meta.population;\r\n        const activeRatio = 100*(active/confirmed);\r\n        const recoveryRatio = 100*(recovered/confirmed);\r\n        const caseFatalityRatio = 100*(deceased/confirmed);\r\n        const testPositivityRatio = 100*(confirmed/tested);\r\n\r\n\r\n        /*\r\n        let currDelta;\r\n        try{\r\n          currDelta = value.delta;\r\n          console.log(currDelta);\r\n        } catch(err) {\r\n          console.log('Delta Does not exist: ', err);\r\n          currDelta = value.delta7;\r\n        } */\r\n\r\n        const {\r\n          confirmed: confirmedDelta , \r\n          recovered: recoverdDelta, \r\n          deceased: deceasedDelta, \r\n          tested: testedDelta,\r\n          vaccinated: vaccinatedDelta\r\n        } = value.delta7;\r\n\r\n        // let testedDelta = null ,vaccinatedDelta = null;\r\n        // try{\r\n        //   const {tested: tested_Delta} = value.delta7; \r\n        //   testedDelta = tested_Delta;\r\n        // } catch(err) {\r\n        //   console.log(`Tested tag not avialable ${stateCode}`,err);\r\n        // }\r\n        // try{\r\n        //   const {vaccinated: vaccinated_Delta} = value.delta7;\r\n        //   vaccinatedDelta = vaccinated_Delta;\r\n        // } catch(err) {\r\n        //   console.log(`Vaccinated tag not avialable ${stateCode}`,err);\r\n        // }\r\n\r\n        return (\r\n          <tr className=\"table-data-row\" key={stateCode}>\r\n            <TableDataButton \r\n            title='State/UT' \r\n            data={stateCode}\r\n            currState={stateCode}\r\n            style={{textAlign: 'center'}}\r\n            />\r\n            <TableDataButton \r\n            title='Confirmed' \r\n            data={confirmed} \r\n            currState={key}\r\n            delta={confirmedDelta} \r\n            style={{color:'rgba(255, 7, 57, 0.89)'}}\r\n            />\r\n            <TableDataButton \r\n            title='Active' \r\n            currState={stateCode}\r\n            data={active}\r\n            />\r\n            <TableDataButton \r\n            title='Recovered' \r\n            data={recovered} \r\n            currState={stateCode}\r\n            delta={recoverdDelta} \r\n            style={{color: 'rgb(40, 167, 70)'}}\r\n            />\r\n            <TableDataButton \r\n            title='Deceased' \r\n            data={deceased} \r\n            currState={stateCode}\r\n            delta={deceasedDelta} \r\n            style={{color:'rgba(108, 117, 125, 0.89)'}}\r\n            />\r\n            <TableDataButton \r\n            title='Tested' \r\n            data={tested} \r\n            currState={stateCode}\r\n            delta={testedDelta} \r\n            style={{color:'rgba(42, 190, 190, 0.89)'}}\r\n            />\r\n            <TableDataButton \r\n            title='Vaccinated' \r\n            data={vaccinated} \r\n            currState={stateCode}\r\n            delta={vaccinatedDelta} \r\n            style={{color:'#ff80b3'}}\r\n            />\r\n            <TableDataButton \r\n            title='Active Ratio' \r\n            data={activeRatio}\r\n            currState={stateCode}\r\n            />\r\n            <TableDataButton \r\n            title='Recovery Ratio' \r\n            data={recoveryRatio}\r\n            currState={stateCode}\r\n            />\r\n            <TableDataButton \r\n            title='Case Fatality Ratio' \r\n            data={caseFatalityRatio} \r\n            currState={stateCode}\r\n            />\r\n            <TableDataButton \r\n            title='Test Positivity Ratio' \r\n            data={testPositivityRatio}\r\n            currState={stateCode}\r\n            />\r\n            <TableDataButton \r\n            title='Population' \r\n            data={population}\r\n            stateCode={stateCode}\r\n            />\r\n      </tr>\r\n      );\r\n      }\r\n    );\r\n\r\n\r\n    return TableContent;\r\n  }\r\n}\r\nexport default TableData;\r\n\r\n/*\r\n<div className=\"data-button-additional\">\r\n          <button onclick={`/state/:${key}`} type=\"button\">Move to: {key}</button>\r\n      </div>*/\r\n","D:\\GROWW\\covid-app\\src\\components\\Table\\TableHeader.js",[],"D:\\GROWW\\covid-app\\src\\components\\utils\\Loader.js",[],"D:\\GROWW\\covid-app\\src\\components\\Table\\TableHeaderButton.js",[],"D:\\GROWW\\covid-app\\src\\components\\Table\\TableDataButton.js",[],"D:\\GROWW\\covid-app\\src\\components\\NavBar\\Mode.js",[],"D:\\GROWW\\covid-app\\src\\components\\NavBar\\Notification.js",["89","90"],"D:\\GROWW\\covid-app\\src\\components\\Routes\\Home.js",[],"D:\\GROWW\\covid-app\\src\\components\\Routes\\StateDetail.js",["91","92","93"],"import React, { useState } from 'react';\r\n\r\nimport Table from '../Table/Table';\r\nimport Cards from '../Cards/Cards';\r\nimport Loader from '../utils/Loader';\r\n\r\nconst StateDetail = (props) => {\r\n    //console.log(this.props.mainData);\r\n    console.log(props.match.params.stateCode);\r\n\r\n    // if(!this.props.mainData){\r\n    //   return <Loader />;\r\n    // }\r\n\r\n    //    {this.props.match.params.stateCode}\r\n    const [stateData, setStateData] = useState(JSON.parse(sessionStorage.stateData));\r\n    const currState = props.match.params.stateCode;\r\n\r\n    console.log(stateData[currState]);\r\n    return (\r\n    <div>\r\n      <h2>stateData</h2>\r\n      <div>\r\n        \r\n        <Table \r\n          data = {stateData[currState]['districts']}\r\n          />\r\n      </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default StateDetail;\r\n\r\n/*\r\n*/\r\n","D:\\GROWW\\covid-app\\src\\components\\utils\\NotFound.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":6,"column":8,"nodeType":"100","messageId":"101","endLine":6,"endColumn":17},{"ruleId":"98","severity":1,"message":"102","line":7,"column":8,"nodeType":"100","messageId":"101","endLine":7,"endColumn":19},{"ruleId":"103","severity":1,"message":"104","line":51,"column":21,"nodeType":"105","messageId":"106","endLine":51,"endColumn":23},{"ruleId":"98","severity":1,"message":"107","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":14},{"ruleId":"98","severity":1,"message":"108","line":9,"column":10,"nodeType":"100","messageId":"101","endLine":9,"endColumn":14},{"ruleId":"109","severity":1,"message":"110","line":34,"column":6,"nodeType":"111","endLine":34,"endColumn":8,"suggestions":"112"},{"ruleId":"98","severity":1,"message":"113","line":4,"column":8,"nodeType":"100","messageId":"101","endLine":4,"endColumn":13},{"ruleId":"98","severity":1,"message":"114","line":5,"column":8,"nodeType":"100","messageId":"101","endLine":5,"endColumn":14},{"ruleId":"98","severity":1,"message":"115","line":16,"column":23,"nodeType":"100","messageId":"101","endLine":16,"endColumn":35},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'SearchBar' is defined but never used.","Identifier","unusedVar","'CurrentTime' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Link' is defined but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.data'. Either include it or remove the dependency array. If 'setData' needs the current value of 'props.data', you can also switch to useReducer instead of useState and read 'props.data' in the reducer.","ArrayExpression",["118"],"'Cards' is defined but never used.","'Loader' is defined but never used.","'setStateData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},"Update the dependencies array to be: [props.data]",{"range":"121","text":"122"},[1067,1069],"[props.data]"]